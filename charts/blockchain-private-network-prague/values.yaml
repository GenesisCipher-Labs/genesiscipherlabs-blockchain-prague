# deployment configuration
deployment:
  namespace: default
  name: blockchain-prague
  maxUnavailable: 0
  maxSurge: 1
  replicas: 1

# create the genesis state for beacon chain
initGenesisContainer:
  name: create-beacon-chain-genesis
  image: gcr.io/prysmaticlabs/prysm/cmd/prysmctl
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "5m"
      memory: "10Mi"
    limits:
      cpu: "10m"
      memory: "20Mi"
  args: ["testnet", "generate-genesis", "--fork=capella", "--num-validators=64", "--genesis-time-delay=10", "--output-ssz=/consensus/genesis.ssz", "--chain-config-file=/consensus/config.yml", "--geth-genesis-json-in=/execution/genesis.json", "--geth-genesis-json-out=/execution/genesis.json"]
  volumeMounts: 
    consensus:
      mountPath: "/consensus"
      name: consensus
    execution:
      mountPath: "/execution"
      name: execution

# remove previous db of geth
initGethRemoveDbContainer:
  name: geth-remove-db
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "5m"
      memory: "10Mi"
    limits:
      cpu: "10m"
      memory: "20Mi"
  args: ["rm", "-rf", "/execution/geth"]
  volumeMounts: 
    execution:
      mountPath: "/execution"
      name: execution

# initiate the genesis file
initGethGenesisContainer:
  name: geth-genesis
  image: ethereum/client-go:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "5m"
      memory: "10Mi"
    limits:
      cpu: "10m"
      memory: "20Mi"
  args: ["--datadir=/execution", "init", "/execution/genesis.json"]
  volumeMounts: 
    execution:
      mountPath: "/execution"
      name: execution

# for geth
gethContainer:
  name: geth
  image: ethereum/client-go:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "25m"
      memory: "50Mi"
    limits:
      cpu: "50m"
      memory: "100Mi"
  args: ["--http","--http.api=eth,net,web3","--http.addr=0.0.0.0","--http.corsdomain=*","--ws","--ws.api=eth,net,web3","--ws.addr=0.0.0.0","--ws.origins=*","--authrpc.vhosts=*","--authrpc.addr=0.0.0.0","--authrpc.jwtsecret=/execution/jwtsecret","--datadir=/execution","--allow-insecure-unlock","--unlock=0x7d441d18b79898449be8b05d1077308bc563669c","--password=/secrets/password/geth_password.txt","--nodiscover","--syncmode=full", "--ipcdisable"]
  ports:
    - 8551:8551
    - 8545:8545
    - 8546:8546
  volumeMounts: 
    execution:
      mountPath: "/execution"
      name: execution
    geth-password:
      mountPath: "/secrets/password"
      name: geth-password
      readOnly: true
    geth-keystore:
      mountPath: "/execution/keystore"
      name: geth-keystore
      readOnly: true

# for beacon chain
beaconChainContainer:
  name: beacon-chain
  image: gcr.io/prysmaticlabs/prysm/beacon-chain:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "25m"
      memory: "50Mi"
    limits:
      cpu: "50m"
      memory: "100Mi"
  args: ["--datadir=/consensus/beacondata", "--min-sync-peers=0", "--genesis-state=/consensus/genesis.ssz", "--bootstrap-node=", "--interop-eth1data-votes", "--chain-config-file=/consensus/config.yml", "--contract-deployment-block=0", "--chain-id=310795", "--rpc-host=0.0.0.0", "--grpc-gateway-host=0.0.0.0", "--execution-endpoint=http://localhost:8551", "--accept-terms-of-use", "--jwt-secret=/execution/jwtsecret", "--suggested-fee-recipient=0x7d441d18b79898449be8b05d1077308bc563669c", "--minimum-peers-per-subnet=0","--enable-debug-rpc-endpoints", "--force-clear-db"]
  ports:
    - 4000:4000
    - 3500:3500
    - 8080:8080
    - 6060:6060
    - 9090:9090
  volumeMounts: 
    consensus:
      mountPath: "/consensus"
      name: consensus
    execution:
      mountPath: "/execution"
      name: execution

# for validator
validatorContainer:
  name: validator
  image: gcr.io/prysmaticlabs/prysm/validator:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "25m"
      memory: "50Mi"
    limits:
      cpu: "50m"
      memory: "100Mi"
  args: ["--beacon-rpc-provider=localhost:4000","--datadir=/consensus/validatordata","--accept-terms-of-use","--interop-num-validators=64","--interop-start-index=0","--chain-config-file=/consensus/config.yml","--force-clear-db"]
  volumeMounts: 
    consensus:
      mountPath: "/consensus"
      name: consensus

volumes: 
  consensus:
    name: consensus
  execution:
    name: execution
  geth-password:
    name: geth-password
    secret:
      secretName: geth-password
  geth-keystore:
    name: geth-keystore
    secret:
      secretName: geth-keystore

service: 
  beaconChain:
    port1: 4000
    port2: 3500
    port3: 8080
    port4: 6060
    port5: 9090
  geth:
    port1: 8551
    port2: 8545
    port3: 8546
    